trigger:
  branches:
    include:
    - master
    - releases/*
  paths:
    include:
    - 'bin/*'
    - 'configs/*'
    - 'src/*'
    - 'package.json'
    - 'README.md'
    - 'azure-pipelines.yml'
  tags:
    include:
    - v*

jobs:
  - job: basic
    pool:
      vmImage: 'ubuntu-16.04'
    steps:
      - task: UseNode@1
        inputs:
          version: '10.9.0'
        displayName: 'Use Node 10.9.0'
      # - script: |
      #     curl -o- -L https://yarnpkg.com/install.sh | bash
      #   displayName: 'Install Yarn'
      - script: |
          yarn install --frozen-lockfile
        displayName: 'Install dependencies'
      - script: |
          yarn build
        displayName: "Run build"
      - script: |
          yarn test
        condition: and(succeeded(), ne(variables['skipTest'], 'true'))
        displayName: "Run test"

  - job: Linux
    dependsOn:
      - basic
    condition: and(succeeded(), ne(variables['skipLinuxJob'], 'true'))
    pool:
      vmImage: 'ubuntu-latest'
    strategy:
      maxParallel: 3
      matrix:
        node-12:
          node_version: '12.x'
        node-10:
          node_version: '10.x'
    steps:
      - task: UseNode@1
        inputs:
          version: $(node_version)
        displayName: 'Use Node $(node_version)'
      - script: |
          yarn install --frozen-lockfile
        displayName: 'Install dependencies'
      - script: |
          yarn build
        displayName: 'Run build'
      - script: |
          yarn test
        condition: and(succeeded(), ne(variables['skipTest'], 'true'))
        displayName: 'Run test'

  - job: MacOS
    dependsOn:
      - basic
    condition: and(succeeded(), ne(variables['skipMacOSJob'], 'true'))
    pool:
      vmImage: 'macOS-latest'
    strategy:
      maxParallel: 3
      matrix:
        node-12:
          node_version: '12.x'
        node-10:
          node_version: '10.x'
    steps:
      - task: UseNode@1
        inputs:
          version: $(node_version)
        displayName: 'Use Node $(node_version)'
      - script: |
          yarn install --frozen-lockfile
        displayName: 'Install dependencies'
      - script: |
          yarn build
        displayName: 'Run build'
      - script: |
          yarn test
        condition: and(succeeded(), ne(variables['skipTest'], 'true'))
        displayName: 'Run test'

  - job: Windows
    dependsOn:
      - basic
    condition: and(succeeded(), ne(variables['skipWindowsJob'], 'true'))
    pool:
      vmImage: 'windows-latest'
    strategy:
      maxParallel: 3
      matrix:
        node-12:
          node_version: '12.x'
        node-10:
          node_version: '10.x'
    steps:
      - task: UseNode@1
        inputs:
          version: $(node_version)
        displayName: 'Use Node $(node_version)'
      - script: |
          yarn install --frozen-lockfile
        displayName: 'Install dependencies'
      - script: |
          yarn build
        displayName: 'Run build'
      - script: |
          yarn test
        condition: and(succeeded(), ne(variables['skipTest'], 'true'))
        displayName: 'Run test'
